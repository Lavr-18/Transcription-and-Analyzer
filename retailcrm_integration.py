import os
import json
import requests
import re
from dotenv import load_dotenv
from datetime import datetime, timedelta, timezone

load_dotenv()

RETAILCRM_URL = "https://tropichouse.retailcrm.ru"
RETAILCRM_API_KEY = os.getenv("RETAILCRM_API_KEY")

# –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª—å–Ω—ã—Ö –∫–æ–¥–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –≤—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤
EXCLUDED_STATUS_CODES = [
    # –ì—Ä—É–ø–ø–∞ "–ù–æ–≤—ã–π" [cite: 1]
    "new", "gotovo-k-soglasovaniiu", "agree-absence",
    # –ì—Ä—É–ø–ø–∞ "–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ"
    "client-confirmed", "ne-dozvonilis", "perezvonit-pozdnee", "klient-zhdet-foto-s-zakupki", "vizit-v-shourum",
    "ozhidaet-oplaty", "gotovim-kp", "soglasovanie-kp", "kp-gotovo-k-zashchite", "proekt-visiak", "soglasovano",
    "oplacheno", "proverka-nalichiia", "oplata-ne-proshla",
    # –ì—Ä—É–ø–ø–∞ "–ó–∞–∫—É–ø–∫–∞" [cite: 1]
    "zakazat-nalichie", "ozhidaet-nalichie",
    # –ì—Ä—É–ø–ø–∞ "–ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è" [cite: 1]
    "soglasovanie-dostavki", "send-to-assembling", "assembling", "peredano-biologu", "gotov-k-otpravke",
    # –ì—Ä—É–ø–ø–∞ "–î–æ—Å—Ç–∞–≤–∫–∞" [cite: 1]
    "send-to-delivery", "dostavlen"
]

def normalize_phone(phone_str: str) -> str:
    """
    –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫ —Ñ–æ—Ä–º–∞—Ç—É '7XXXXXXXXXX' (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).
    –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –∑–∞–º–µ–Ω—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—É—é '8' –Ω–∞ '7'.
    """
    digits_only = re.sub(r'\D', '', phone_str)
    if digits_only.startswith('8') and len(digits_only) == 11:
        return '7' + digits_only[1:]
    elif digits_only.startswith('7') and len(digits_only) == 11:
        return digits_only
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞, –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 9 –∏ –∏–º–µ–µ—Ç 10 —Ü–∏—Ñ—Ä (—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –º–æ–±–∏–ª—å–Ω—ã–µ)
    elif digits_only.startswith('9') and len(digits_only) == 10:
        return '7' + digits_only
    return digits_only


def check_if_phone_has_excluded_order(phone_number: str) -> bool:
    """
    –ò—â–µ—Ç –∑–∞–∫–∞–∑—ã –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç,
    –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –≤ –∏—Å–∫–ª—é—á–µ–Ω–Ω–æ–º —Å—Ç–∞—Ç—É—Å–µ.
    Returns:
        True, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∑–∞–∫–∞–∑ –≤ –∏—Å–∫–ª—é—á–µ–Ω–Ω–æ–º —Å—Ç–∞—Ç—É—Å–µ, –∏–Ω–∞—á–µ False.
    """
    if not RETAILCRM_API_KEY:
        print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
        return False

    normalized_phone = normalize_phone(phone_number)
    if not normalized_phone:
        return False

    api_endpoint = f"{RETAILCRM_URL}/api/v5/orders"
    params = {
        "apiKey": RETAILCRM_API_KEY,
        "filter[customer]": normalized_phone,
    }

    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤: –ò—â–µ–º –∑–∞–∫–∞–∑—ã –¥–ª—è –Ω–æ–º–µ—Ä–∞: {normalized_phone}...")

    try:
        response = requests.get(api_endpoint, params=params, timeout=10)
        response.raise_for_status()
        data = response.json()

        if data.get("success") and data.get("orders"):
            for order in data["orders"]:
                order_status = order.get("status")
                if order_status and order_status in EXCLUDED_STATUS_CODES:
                    print(f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤: –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '{order_status}' (–∏—Å–∫–ª—é—á–µ–Ω).")
                    return True
            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤: –ó–∞–∫–∞–∑—ã –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –Ω–∏ –æ–¥–∏–Ω –Ω–µ –∏–º–µ–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞.")
            return False
        else:
            print("‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤: –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–≤—Ä–∞—â–∞–µ–º False.")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


def check_if_phone_has_recent_order(phone_number: str, hours: int = 36) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –±—ã–ª –ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã–π –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 'hours' —á–∞—Å–æ–≤.
    Args:
        phone_number: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞.
        hours: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 36).
    Returns:
        True, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –Ω–µ–¥–∞–≤–Ω–∏–π –∑–∞–∫–∞–∑, –∏–Ω–∞—á–µ False.
    """
    if not RETAILCRM_API_KEY:
        print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")
        return False

    normalized_phone = normalize_phone(phone_number)
    if not normalized_phone:
        return False

    api_endpoint = f"{RETAILCRM_URL}/api/v5/orders"
    params = {
        "apiKey": RETAILCRM_API_KEY,
        "filter[customer]": normalized_phone,
    }

    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤: –ò—â–µ–º –∑–∞–∫–∞–∑—ã –¥–ª—è –Ω–æ–º–µ—Ä–∞: {normalized_phone} –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {hours} —á...")

    try:
        response = requests.get(api_endpoint, params=params, timeout=10)
        response.raise_for_status()
        data = response.json()

        if data.get("success") and data.get("orders"):
            now_utc = datetime.now(timezone.utc)
            time_cutoff = now_utc - timedelta(hours=hours)

            for order in data["orders"]:
                created_at_str = order.get("createdAt")
                if created_at_str:
                    created_at_dt = datetime.fromisoformat(created_at_str)
                    if created_at_dt.astimezone(timezone.utc) >= time_cutoff:
                        print(f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤: –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ {created_at_dt}. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç.")
                        return True
            print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤: –ó–∞–∫–∞–∑—ã –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –Ω–∏ –æ–¥–∏–Ω –Ω–µ —Å–æ–∑–¥–∞–Ω –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 36 —á–∞—Å–æ–≤.")
            return False
        else:
            print(f"‚ÑπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤: –ó–∞–∫–∞–∑—ã –¥–ª—è –Ω–æ–º–µ—Ä–∞ {normalized_phone} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


# –û—Å—Ç–∞–≤—à–∏–µ—Å—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –≤–∞—à–µ–≥–æ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
def get_order_link_by_phone(phone_number: str) -> str:
    # ... (—Å—Ç–∞—Ä—ã–π –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏)
    if not RETAILCRM_API_KEY:
        print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RetailCRM.")
        return ""

    normalized_input_phone = normalize_phone(phone_number)
    customer_id = None
    customer_card_link = "" # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞

    # --- –®–∞–≥ 1: –ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º filter[name]) ---
    customers_api_endpoint = f"{RETAILCRM_URL}/api/v5/customers"
    customers_params = {
        "apiKey": RETAILCRM_API_KEY,
        "filter[name]": normalized_input_phone # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º filter[name]
    }

    print(f"üîç –®–∞–≥ 1: –ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ RetailCRM –¥–ª—è –Ω–æ–º–µ—Ä–∞: {normalized_input_phone} (—Ñ–∏–ª—å—Ç—Ä –ø–æ –∏–º–µ–Ω–∏)...")

    try:
        customers_response = requests.get(customers_api_endpoint, params=customers_params, timeout=10)
        customers_response.raise_for_status()
        data = customers_response.json()

        if data.get("success") and data.get("customers"):
            first_customer = data["customers"][0]
            customer_id = first_customer.get("id")
            if customer_id:
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
                customer_card_link = f"{RETAILCRM_URL}/customers/{customer_id}#t-log-orders"
                print(f"‚úÖ –®–∞–≥ 1: –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω. ID –∫–ª–∏–µ–Ω—Ç–∞: {customer_id}. –ó–∞–ø–∞—Å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É: {customer_card_link}")
            else:
                print(f"‚ÑπÔ∏è –®–∞–≥ 1: –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID.")
                return "" # –ï—Å–ª–∏ ID –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ—Ç, —Ç–æ –∏ –∑–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π—Ç–∏
        else:
            print(f"‚ÑπÔ∏è –®–∞–≥ 1: –ö–ª–∏–µ–Ω—Ç –¥–ª—è –Ω–æ–º–µ—Ä–∞ {normalized_input_phone} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ RetailCRM.")
            return "" # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–æ –∏ –∑–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π—Ç–∏

    except requests.exceptions.RequestException as e:
        print(f"‚ùå –®–∞–≥ 1: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ RetailCRM: {e}")
        return "" # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É

    # --- –®–∞–≥ 2: –ò—â–µ–º –∑–∞–∫–∞–∑—ã –ø–æ ID –∫–ª–∏–µ–Ω—Ç–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å) ---
    if customer_id:
        orders_api_endpoint = f"{RETAILCRM_URL}/api/v5/orders"
        orders_params = {
            "apiKey": RETAILCRM_API_KEY,
            "filter[customerId]": customer_id, # –ò—Å–ø–æ–ª—å–∑—É–µ–º filter[customerId]
        }

        print(f"üîç –®–∞–≥ 2: –ò—â–µ–º –∑–∞–∫–∞–∑—ã –≤ RetailCRM –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ ID: {customer_id} (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å)...")

        try:
            orders_response = requests.get(orders_api_endpoint, params=orders_params, timeout=10)
            orders_response.raise_for_status()
            orders_data = orders_response.json()

            if orders_data.get("success") and orders_data.get("orders"):
                # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º—ã–π –Ω–æ–≤—ã–π
                sorted_orders = sorted(orders_data["orders"], key=lambda x: x.get("createdAt", ""), reverse=True)
                first_order = sorted_orders[0]
                order_id = first_order.get("id")

                if order_id:
                    order_link = f"{RETAILCRM_URL}/orders/{order_id}/edit"
                    print(f"‚úÖ –®–∞–≥ 2: –ù–∞–π–¥–µ–Ω –ø—Ä—è–º–æ–π –∑–∞–∫–∞–∑. –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑: {order_link}")
                    return order_link # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫–∞–∑
                else:
                    print(f"‚ÑπÔ∏è –®–∞–≥ 2: –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∑–∞–∫–∞–∑–∞.")
                    return customer_card_link # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω—É—é —Å—Å—ã–ª–∫—É
            else:
                print(f"‚ÑπÔ∏è –®–∞–≥ 2: –ó–∞–∫–∞–∑—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ ID {customer_id} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ RetailCRM. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞.")
                return customer_card_link # –ï—Å–ª–∏ –∑–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω—É—é —Å—Å—ã–ª–∫—É

        except requests.exceptions.RequestException as e:
            print(f"‚ùå –®–∞–≥ 2: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞ –≤ RetailCRM: {e}. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞.")
            return customer_card_link # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω—É—é —Å—Å—ã–ª–∫—É
    else:
        print("‚ÑπÔ∏è –®–∞–≥ 2 –ø—Ä–æ–ø—É—â–µ–Ω: ID –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –Ω–∞ –®–∞–≥–µ 1.")
        return "" # –ï—Å–ª–∏ ID –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –®–∞–≥–µ 1, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É

def get_manager_name_from_crm(phone_number: str) -> str | None:
    # ... (—Å—Ç–∞—Ä—ã–π –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏)
    """
    –ò—â–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∑–∞–∫–∞–∑—É –∫–ª–∏–µ–Ω—Ç–∞ –≤ RetailCRM –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.

    Args:
        phone_number: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞.

    Returns:
        –ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (firstName) –∏–ª–∏ None, –µ—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
    """
    if not RETAILCRM_API_KEY:
        print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RetailCRM.")
        return None

    normalized_phone = normalize_phone(phone_number)
    manager_id = None

    # --- –®–∞–≥ 1: –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å) ---
    # –°–æ–≥–ª–∞—Å–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º filter[customer]
    orders_api_endpoint = f"{RETAILCRM_URL}/api/v5/orders"
    orders_params = {
        "apiKey": RETAILCRM_API_KEY,
        "filter[customer]": normalized_phone, # –ò—Å–ø–æ–ª—å–∑—É–µ–º filter[customer] —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    }

    print(f"üîç CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –¥–ª—è –Ω–æ–º–µ—Ä–∞: {normalized_phone} (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å)...")

    try:
        orders_response = requests.get(orders_api_endpoint, params=orders_params, timeout=10)
        orders_response.raise_for_status()
        orders_data = orders_response.json()

        if orders_data.get("success") and orders_data.get("orders"):
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º—ã–π –Ω–æ–≤—ã–π
            sorted_orders = sorted(orders_data["orders"], key=lambda x: x.get("createdAt", ""), reverse=True)
            last_order = sorted_orders[0]
            manager_id = last_order.get("managerId")
            if manager_id:
                print(f"‚úÖ CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑ —Å managerId: {manager_id}")
            else:
                print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω, –Ω–æ managerId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
                return None
        else:
            print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ó–∞–∫–∞–∑—ã –¥–ª—è –Ω–æ–º–µ—Ä–∞ {normalized_phone} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return None

    except requests.exceptions.RequestException as e:
        print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
        return None
    except Exception as e:
        print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
        return None

    # --- –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º –∏–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ managerId ---
    if manager_id:
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò–∑–º–µ–Ω–µ–Ω —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å /reference/users –Ω–∞ /users
        users_api_endpoint = f"{RETAILCRM_URL}/api/v5/users"
        users_params = {
            "apiKey": RETAILCRM_API_KEY
        }

        print(f"üîç CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å ID: {manager_id}...")

        try:
            users_response = requests.get(users_api_endpoint, params=users_params, timeout=10)
            users_response.raise_for_status()
            users_data = users_response.json()

            if users_data.get("success") and users_data.get("users"):
                # –ò–°–ü–†–ê–í–õ–ï–ù–û: RetailCRM API /users –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,
                # –ø–æ—ç—Ç–æ–º—É –∏—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID.
                found_user = None
                for user_item in users_data["users"]:
                    if str(user_item.get("id")) == str(manager_id):
                        found_user = user_item
                        break

                if found_user:
                    manager_name = found_user.get("firstName")
                    if manager_name:
                        print(f"‚úÖ CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–∞–π–¥–µ–Ω–æ –∏–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {manager_name}")
                        return manager_name
                    else:
                        print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è ID {manager_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                        return None
                print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {manager_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
                return None
            else:
                print("‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
                return None

        except requests.exceptions.RequestException as e:
            print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
            return None
        except Exception as e:
            print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
            return None
    return None

def get_all_order_status_groups() -> list:
    # ... (—Å—Ç–∞—Ä—ã–π –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏)
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≥—Ä—É–ø–ø —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ RetailCRM.
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
    """
    if not RETAILCRM_API_KEY:
        print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—ã —Å—Ç–∞—Ç—É—Å–æ–≤.")
        return []

    status_groups_api_endpoint = f"{RETAILCRM_URL}/api/v5/reference/status-groups"
    status_groups_params = {
        "apiKey": RETAILCRM_API_KEY
    }

    try:
        response = requests.get(status_groups_api_endpoint, params=status_groups_params, timeout=10)
        response.raise_for_status()
        data = response.json()

        if data.get("success") and data.get("statusGroups"):
            group_codes = [group.get("code") for group in data["statusGroups"].values() if group.get("code")]
            return group_codes
        else:
            print("‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ RetailCRM.")
            return []
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–∑ RetailCRM: {e}")
        return []
    except Exception as e:
        print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø —Å—Ç–∞—Ç—É—Å–æ–≤: {e}")
        return []


if __name__ == "__main__":
    test_phones = [
        "79166516536",
        "79160271945",
        "79854523727",
        "74992670385",
        "79852222666",
        "74993482193",
        "79855775960",
        "79257763463",
        "79067777466",
        "79067777466",
        "79267767176",
        "79857776565",
        "79362814549",
        "79265902643",
        "79257661800",
        "79684411994",
        "79684411994",
        "79161106668", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä –∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
        "79969795064", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
        "79037951801", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
        "79398538673", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
        "79685063717", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
        "74954017276"  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
    ]
    links = []
    manager_names_from_crm = []

    for i, phone in enumerate(test_phones):
        print(f"\n--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ get_order_link_by_phone —Å –Ω–æ–º–µ—Ä–æ–º {phone} (–¢–µ—Å—Ç {i+1}/{len(test_phones)}) ---")
        link = get_order_link_by_phone(phone)
        links.append(link)
        if link:
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –°—Å—ã–ª–∫–∞: {link}")
        else:
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

        print(f"--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ get_manager_name_from_crm —Å –Ω–æ–º–µ—Ä–æ–º {phone} ---")
        manager_name = get_manager_name_from_crm(phone)
        manager_names_from_crm.append(manager_name)
        if manager_name:
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–∑ CRM: {manager_name}")
        else:
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–∑ CRM –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        print(f"--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ check_if_phone_has_excluded_order —Å –Ω–æ–º–µ—Ä–æ–º {phone} ---")
        has_excluded_order = check_if_phone_has_excluded_order(phone)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –ï—Å—Ç—å –ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑: {has_excluded_order}")

        print(f"--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ check_if_phone_has_recent_order —Å –Ω–æ–º–µ—Ä–æ–º {phone} ---")
        has_recent_order = check_if_phone_has_recent_order(phone)
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –ï—Å—Ç—å –ª–∏ –Ω–µ–¥–∞–≤–Ω–∏–π –∑–∞–∫–∞–∑: {has_recent_order}")


    print("\n--- –í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ ---")
    print(*links, sep='\n')

    print("\n--- –í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏–∑ CRM ---")
    print(*manager_names_from_crm, sep='\n')



# import os
# import json
# import requests
# import re
# from dotenv import load_dotenv
# from datetime import datetime, timedelta
#
# load_dotenv()
#
# RETAILCRM_URL = "https://tropichouse.retailcrm.ru"
# RETAILCRM_API_KEY = os.getenv("RETAILCRM_API_KEY")
#
#
# def normalize_phone(phone_str: str) -> str:
#     """
#     –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫ —Ñ–æ—Ä–º–∞—Ç—É '7XXXXXXXXXX' (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã).
#     –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã –∏ –∑–∞–º–µ–Ω—è–µ—Ç –Ω–∞—á–∞–ª—å–Ω—É—é '8' –Ω–∞ '7'.
#     """
#     digits_only = re.sub(r'\D', '', phone_str)
#     if digits_only.startswith('8') and len(digits_only) == 11:
#         return '7' + digits_only[1:]
#     elif digits_only.startswith('7') and len(digits_only) == 11:
#         return digits_only
#     # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞, –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 9 –∏ –∏–º–µ–µ—Ç 10 —Ü–∏—Ñ—Ä (—Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –º–æ–±–∏–ª—å–Ω—ã–µ)
#     elif digits_only.startswith('9') and len(digits_only) == 10:
#         return '7' + digits_only
#     return digits_only
#
#
# def get_all_order_status_groups() -> list:
#     """
#     –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≥—Ä—É–ø–ø —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ RetailCRM.
#     –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.
#     """
#     if not RETAILCRM_API_KEY:
#         print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—ã —Å—Ç–∞—Ç—É—Å–æ–≤.")
#         return []
#
#     status_groups_api_endpoint = f"{RETAILCRM_URL}/api/v5/reference/status-groups"
#     status_groups_params = {
#         "apiKey": RETAILCRM_API_KEY
#     }
#
#     try:
#         response = requests.get(status_groups_api_endpoint, params=status_groups_params, timeout=10)
#         response.raise_for_status()
#         data = response.json()
#
#         if data.get("success") and data.get("statusGroups"):
#             group_codes = [group.get("code") for group in data["statusGroups"].values() if group.get("code")]
#             return group_codes
#         else:
#             print("‚ÑπÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥—Ä—É–ø–ø—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤ –∏–∑ RetailCRM.")
#             return []
#     except requests.exceptions.RequestException as e:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–∑ RetailCRM: {e}")
#         return []
#     except Exception as e:
#         print(f"‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø —Å—Ç–∞—Ç—É—Å–æ–≤: {e}")
#         return []
#
#
# def get_order_link_by_phone(phone_number: str) -> str:
#     """
#     –ò—â–µ—Ç –∑–∞–∫–∞–∑—ã –≤ RetailCRM –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
#     –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –ø—Ä—è–º–æ–π –∑–∞–∫–∞–∑, –µ—Å–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞.
#
#     Args:
#         phone_number: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "79851234567").
#
#     Returns:
#         –°—Ç—Ä–æ–∫–∞ —Å URL –∑–∞–∫–∞–∑–∞ –≤ RetailCRM, –∏–ª–∏ URL –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞, –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.
#     """
#     if not RETAILCRM_API_KEY:
#         print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RetailCRM.")
#         return ""
#
#     normalized_input_phone = normalize_phone(phone_number)
#     customer_id = None
#     customer_card_link = "" # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞
#
#     # --- –®–∞–≥ 1: –ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ–º filter[name]) ---
#     customers_api_endpoint = f"{RETAILCRM_URL}/api/v5/customers"
#     customers_params = {
#         "apiKey": RETAILCRM_API_KEY,
#         "filter[name]": normalized_input_phone # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º filter[name]
#     }
#
#     print(f"üîç –®–∞–≥ 1: –ò—â–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ RetailCRM –¥–ª—è –Ω–æ–º–µ—Ä–∞: {normalized_input_phone} (—Ñ–∏–ª—å—Ç—Ä –ø–æ –∏–º–µ–Ω–∏)...")
#
#     try:
#         customers_response = requests.get(customers_api_endpoint, params=customers_params, timeout=10)
#         customers_response.raise_for_status()
#         data = customers_response.json()
#
#         if data.get("success") and data.get("customers"):
#             first_customer = data["customers"][0]
#             customer_id = first_customer.get("id")
#             if customer_id:
#                 # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞ –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
#                 customer_card_link = f"{RETAILCRM_URL}/customers/{customer_id}#t-log-orders"
#                 print(f"‚úÖ –®–∞–≥ 1: –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω. ID –∫–ª–∏–µ–Ω—Ç–∞: {customer_id}. –ó–∞–ø–∞—Å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É: {customer_card_link}")
#             else:
#                 print(f"‚ÑπÔ∏è –®–∞–≥ 1: –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID.")
#                 return "" # –ï—Å–ª–∏ ID –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ—Ç, —Ç–æ –∏ –∑–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π—Ç–∏
#         else:
#             print(f"‚ÑπÔ∏è –®–∞–≥ 1: –ö–ª–∏–µ–Ω—Ç –¥–ª—è –Ω–æ–º–µ—Ä–∞ {normalized_input_phone} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ RetailCRM.")
#             return "" # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Ç–æ –∏ –∑–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π—Ç–∏
#
#     except requests.exceptions.RequestException as e:
#         print(f"‚ùå –®–∞–≥ 1: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ RetailCRM: {e}")
#         return "" # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
#
#     # --- –®–∞–≥ 2: –ò—â–µ–º –∑–∞–∫–∞–∑—ã –ø–æ ID –∫–ª–∏–µ–Ω—Ç–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å) ---
#     if customer_id:
#         orders_api_endpoint = f"{RETAILCRM_URL}/api/v5/orders"
#         orders_params = {
#             "apiKey": RETAILCRM_API_KEY,
#             "filter[customerId]": customer_id, # –ò—Å–ø–æ–ª—å–∑—É–µ–º filter[customerId]
#         }
#
#         print(f"üîç –®–∞–≥ 2: –ò—â–µ–º –∑–∞–∫–∞–∑—ã –≤ RetailCRM –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ ID: {customer_id} (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å)...")
#
#         try:
#             orders_response = requests.get(orders_api_endpoint, params=orders_params, timeout=10)
#             orders_response.raise_for_status()
#             orders_data = orders_response.json()
#
#             if orders_data.get("success") and orders_data.get("orders"):
#                 # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º—ã–π –Ω–æ–≤—ã–π
#                 sorted_orders = sorted(orders_data["orders"], key=lambda x: x.get("createdAt", ""), reverse=True)
#                 first_order = sorted_orders[0]
#                 order_id = first_order.get("id")
#
#                 if order_id:
#                     order_link = f"{RETAILCRM_URL}/orders/{order_id}/edit"
#                     print(f"‚úÖ –®–∞–≥ 2: –ù–∞–π–¥–µ–Ω –ø—Ä—è–º–æ–π –∑–∞–∫–∞–∑. –°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–∫–∞–∑: {order_link}")
#                     return order_link # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫–∞–∑
#                 else:
#                     print(f"‚ÑπÔ∏è –®–∞–≥ 2: –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –∑–∞–∫–∞–∑–∞.")
#                     return customer_card_link # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω—É—é —Å—Å—ã–ª–∫—É
#             else:
#                 print(f"‚ÑπÔ∏è –®–∞–≥ 2: –ó–∞–∫–∞–∑—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ ID {customer_id} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ RetailCRM. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞.")
#                 return customer_card_link # –ï—Å–ª–∏ –∑–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω—É—é —Å—Å—ã–ª–∫—É
#
#         except requests.exceptions.RequestException as e:
#             print(f"‚ùå –®–∞–≥ 2: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞ –≤ RetailCRM: {e}. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É –∫–ª–∏–µ–Ω—Ç–∞.")
#             return customer_card_link # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–ø–∞—Å–Ω—É—é —Å—Å—ã–ª–∫—É
#     else:
#         print("‚ÑπÔ∏è –®–∞–≥ 2 –ø—Ä–æ–ø—É—â–µ–Ω: ID –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –Ω–∞ –®–∞–≥–µ 1.")
#         return "" # –ï—Å–ª–∏ ID –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –®–∞–≥–µ 1, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
#
#
# def get_manager_name_from_crm(phone_number: str) -> str | None:
#     """
#     –ò—â–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∑–∞–∫–∞–∑—É –∫–ª–∏–µ–Ω—Ç–∞ –≤ RetailCRM –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
#
#     Args:
#         phone_number: –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞.
#
#     Returns:
#         –ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (firstName) –∏–ª–∏ None, –µ—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
#     """
#     if not RETAILCRM_API_KEY:
#         print("‚ùó –û—à–∏–±–∫–∞: RETAILCRM_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RetailCRM.")
#         return None
#
#     normalized_phone = normalize_phone(phone_number)
#     manager_id = None
#
#     # --- –®–∞–≥ 1: –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å) ---
#     # –°–æ–≥–ª–∞—Å–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º filter[customer]
#     orders_api_endpoint = f"{RETAILCRM_URL}/api/v5/orders"
#     orders_params = {
#         "apiKey": RETAILCRM_API_KEY,
#         "filter[customer]": normalized_phone, # –ò—Å–ø–æ–ª—å–∑—É–µ–º filter[customer] —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
#     }
#
#     print(f"üîç CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –¥–ª—è –Ω–æ–º–µ—Ä–∞: {normalized_phone} (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å)...")
#
#     try:
#         orders_response = requests.get(orders_api_endpoint, params=orders_params, timeout=10)
#         orders_response.raise_for_status()
#         orders_data = orders_response.json()
#
#         if orders_data.get("success") and orders_data.get("orders"):
#             # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–∫–∞–∑—ã –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –≤ —É–±—ã–≤–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∞–º—ã–π –Ω–æ–≤—ã–π
#             sorted_orders = sorted(orders_data["orders"], key=lambda x: x.get("createdAt", ""), reverse=True)
#             last_order = sorted_orders[0]
#             manager_id = last_order.get("managerId")
#             if manager_id:
#                 print(f"‚úÖ CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑ —Å managerId: {manager_id}")
#             else:
#                 print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ó–∞–∫–∞–∑ –Ω–∞–π–¥–µ–Ω, –Ω–æ managerId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")
#                 return None
#         else:
#             print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ó–∞–∫–∞–∑—ã –¥–ª—è –Ω–æ–º–µ—Ä–∞ {normalized_phone} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
#             return None
#
#     except requests.exceptions.RequestException as e:
#         print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
#         return None
#     except Exception as e:
#         print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–∫–∞–∑–∞: {e}")
#         return None
#
#     # --- –®–∞–≥ 2: –ü–æ–ª—É—á–∞–µ–º –∏–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ managerId ---
#     if manager_id:
#         # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò–∑–º–µ–Ω–µ–Ω —ç–Ω–¥–ø–æ–∏–Ω—Ç —Å /reference/users –Ω–∞ /users
#         users_api_endpoint = f"{RETAILCRM_URL}/api/v5/users"
#         users_params = {
#             "apiKey": RETAILCRM_API_KEY
#         }
#
#         print(f"üîç CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å ID: {manager_id}...")
#
#         try:
#             users_response = requests.get(users_api_endpoint, params=users_params, timeout=10)
#             users_response.raise_for_status()
#             users_data = users_response.json()
#
#             if users_data.get("success") and users_data.get("users"):
#                 # –ò–°–ü–†–ê–í–õ–ï–ù–û: RetailCRM API /users –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π,
#                 # –ø–æ—ç—Ç–æ–º—É –∏—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —Å–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID.
#                 found_user = None
#                 for user_item in users_data["users"]:
#                     if str(user_item.get("id")) == str(manager_id):
#                         found_user = user_item
#                         break
#
#                 if found_user:
#                     manager_name = found_user.get("firstName")
#                     if manager_name:
#                         print(f"‚úÖ CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–∞–π–¥–µ–Ω–æ –∏–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {manager_name}")
#                         return manager_name
#                     else:
#                         print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ò–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–ª—è ID {manager_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
#                         return None
#                 print(f"‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {manager_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
#                 return None
#             else:
#                 print("‚ÑπÔ∏è CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
#                 return None
#
#         except requests.exceptions.RequestException as e:
#             print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
#             return None
#         except Exception as e:
#             print(f"‚ùå CRM-–ø–æ–∏—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
#             return None
#     return None
#
#
# if __name__ == "__main__":
#     test_phones = [
#         "79166516536",
#         "79160271945",
#         "79854523727",
#         "74992670385",
#         "79852222666",
#         "74993482193",
#         "79855775960",
#         "79257763463",
#         "79067777466",
#         "79067777466",
#         "79267767176",
#         "79857776565",
#         "79362814549",
#         "79265902643",
#         "79257661800",
#         "79684411994",
#         "79684411994",
#         "79161106668", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä –∏–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
#         "79969795064", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
#         "79037951801", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
#         "79398538673", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
#         "79685063717", # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
#         "74954017276"  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –Ω–æ–º–µ—Ä
#     ]
#     links = []
#     manager_names_from_crm = []
#
#     for i, phone in enumerate(test_phones):
#         print(f"\n--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ get_order_link_by_phone —Å –Ω–æ–º–µ—Ä–æ–º {phone} (–¢–µ—Å—Ç {i+1}/{len(test_phones)}) ---")
#         link = get_order_link_by_phone(phone)
#         links.append(link)
#         if link:
#             print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –°—Å—ã–ª–∫–∞: {link}")
#         else:
#             print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
#
#         print(f"--- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ get_manager_name_from_crm —Å –Ω–æ–º–µ—Ä–æ–º {phone} ---")
#         manager_name = get_manager_name_from_crm(phone)
#         manager_names_from_crm.append(manager_name)
#         if manager_name:
#             print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–∑ CRM: {manager_name}")
#         else:
#             print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞: –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–∑ CRM –Ω–µ –Ω–∞–π–¥–µ–Ω.")
#
#
#     print("\n--- –í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ ---")
#     print(*links, sep='\n')
#
#     print("\n--- –í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –∏–∑ CRM ---")
#     print(*manager_names_from_crm, sep='\n')