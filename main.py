import os
import sys
import shutil
import json
from datetime import datetime, timedelta, timezone
from pathlib import Path
import re
import time

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
project_root = Path(__file__).resolve().parent
if str(project_root) not in sys.path:
    sys.path.append(str(project_root))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
from uis_call_downloader import get_calls_report, download_record, download_calls
from transcriber import transcribe_all
from analyzer import analyze_transcripts
from google_sheets import send_analyses_to_google_form
# –ù–û–í–´–ô –ò–ú–ü–û–†–¢: –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫ –∏–∑ XLSX
from google_sheets_integration import load_analyzed_order_links, download_google_sheet_as_xlsx

# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∏–∑ retailcrm: —É–¥–∞–ª–µ–Ω—ã –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–∞—è
from retailcrm_integration import check_if_last_order_is_analyzable, get_last_order_link_for_check

# Define Moscow timezone (UTC+3)
MSK = timezone(timedelta(hours=3))

# –ö–û–ù–°–¢–ê–ù–¢–ê: –ò–º—è —Ñ–∞–π–ª–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å—Å—è Google Sheet
GS_XLSX_FILENAME = "–∞–Ω–∞–ª–∏–∑_–∑–≤–æ–Ω–∫–æ–≤_gs.xlsx"

# –ù–û–í–ê–Ø –ö–û–ù–°–¢–ê–ù–¢–ê: ID Google Sheet –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏
GS_SHEET_ID = "1QhcIcPi3XMUPcKjwfM6983IkWn8Q-7xGoj49HzxC5BM"

# –ù–û–í–ê–Ø –ö–û–ù–°–¢–ê–ù–¢–ê: GID (ID –≤–∫–ª–∞–¥–∫–∏) –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ "–ê–Ω–∞–ª–∏–∑ –∑–≤–æ–Ω–∫–æ–≤ 12.15.19"
GS_GID = "617179352"


def clean_old_folders(base_dir: Path, days_to_keep: int):
    """
    –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –±–∞–∑–æ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
    """
    print(f"\nüßπ –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö –ø–∞–ø–æ–∫ –≤ {base_dir} (—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days_to_keep} –¥–Ω–µ–π)...")
    current_time_msk = datetime.now(MSK)
    cutoff_date = (current_time_msk - timedelta(days=days_to_keep)).date()
    if not base_dir.exists():
        print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {base_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É.")
        return
    for folder in base_dir.iterdir():
        if folder.is_dir():
            try:
                date_str_part = folder.name.split('_')[-1]
                folder_date = datetime.strptime(date_str_part, "%d.%m.%Y").date()
                if folder_date < cutoff_date:
                    print(
                        f"üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–∞–ø–∫—É: {folder} (–¥–∞—Ç–∞ {folder_date.strftime('%d.%m.%Y')} —Å—Ç–∞—Ä—à–µ {cutoff_date.strftime('%d.%m.%Y')})")
                    shutil.rmtree(folder)
                else:
                    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞–ø–∫—É: {folder} (–¥–∞—Ç–∞ {folder_date.strftime('%d.%m.%Y')})")
            except ValueError:
                print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫—É {folder.name}: –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞—Ç—É –∏–∑ –∏–º–µ–Ω–∏ –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏ {folder.name}: {e}")
    print(f"–û—á–∏—Å—Ç–∫–∞ –≤ {base_dir} –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


# –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä existing_order_links
def send_all_analyses_to_integrations(analyses_folder_path: Path, target_folder_date_str: str, existing_order_links: set):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ Google Forms.
    """
    print("\n--- –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ Google Forms (–∏ Telegram, –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ) ---")
    if not analyses_folder_path.exists():
        print(f"–ü–∞–ø–∫–∞ —Å –∞–Ω–∞–ª–∏–∑–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {analyses_folder_path}. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É.")
        return
    print(f"\n  ‚û°Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤—Å–µ—Ö —Ü–µ–ª–µ–≤—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ Google Forms –∏–∑ {analyses_folder_path}.")
    # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞–±–æ—Ä —Å—Å—ã–ª–æ–∫ –¥–∞–ª—å—à–µ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    send_analyses_to_google_form(analyses_folder_path, target_folder_date_str, existing_order_links)


def run_processing_pipeline():
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤–æ–Ω–∫–æ–≤
    –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –ú–°–ö –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø–∞–π–ø–ª–∞–π–Ω.
    """
    current_time_msk = datetime.now(MSK)
    current_hour_msk = current_time_msk.hour
    current_date_msk = current_time_msk.date()

    print(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ –ú–°–ö: {current_time_msk.strftime('%Y-%m-%d %H:%M:%S')}")

    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏
    clean_old_folders(Path("audio"), 1)
    clean_old_folders(Path("transcripts"), 1)
    clean_old_folders(Path("analyses"), 1)

    start_time_period = None
    end_time_period = None
    target_folder_date_str = current_date_msk.strftime("%d.%m.%Y")

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
    if current_hour_msk == 12:
        yesterday_date_msk = current_date_msk - timedelta(days=1)
        print("–û–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–µ—Ä–∏–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏: —É—Ç—Ä–µ–Ω–Ω–∏–µ –∑–≤–æ–Ω–∫–∏ (—Å –≤–µ—á–µ—Ä–∞ –≤—á–µ—Ä–∞ –¥–æ –ø–æ–ª—É–¥–Ω—è —Å–µ–≥–æ–¥–Ω—è)")
        start_time_period = datetime.combine(yesterday_date_msk, datetime.min.time().replace(hour=19), tzinfo=MSK)
        end_time_period = datetime.combine(current_date_msk, datetime.min.time().replace(hour=11, minute=59, second=59),
                                           tzinfo=MSK)
        target_folder_date_str = current_date_msk.strftime("%d.%m.%Y")

    elif current_hour_msk == 15:
        print("–û–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–µ—Ä–∏–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏: –¥–Ω–µ–≤–Ω—ã–µ –∑–≤–æ–Ω–∫–∏ (—Å –ø–æ–ª—É–¥–Ω—è —Å–µ–≥–æ–¥–Ω—è –¥–æ 15:00 —Å–µ–≥–æ–¥–Ω—è)")
        start_time_period = datetime.combine(current_date_msk, datetime.min.time().replace(hour=12), tzinfo=MSK)
        end_time_period = datetime.combine(current_date_msk, datetime.min.time().replace(hour=14, minute=59, second=59),
                                           tzinfo=MSK)
        target_folder_date_str = current_date_msk.strftime("%d.%m.%Y")

    elif current_hour_msk == 19:
        print("–û–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–µ—Ä–∏–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏: –≤–µ—á–µ—Ä–Ω–∏–µ –∑–≤–æ–Ω–∫–∏ (—Å 15:00 —Å–µ–≥–æ–¥–Ω—è –¥–æ 19:00 —Å–µ–≥–æ–¥–Ω—è)")
        start_time_period = datetime.combine(current_date_msk, datetime.min.time().replace(hour=15), tzinfo=MSK)
        end_time_period = datetime.combine(current_time_msk, datetime.min.time().replace(hour=18, minute=59, second=59),
                                           tzinfo=MSK)
        target_folder_date_str = current_date_msk.strftime("%d.%m.%Y")
    else:
        print(
            "–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–µ—Ä–∏–æ–¥–∞–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ (12:00, 15:00, 19:00 –ú–°–ö). –ü—Ä–æ–ø—É—Å–∫–∞—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.")
        return

    if start_time_period and end_time_period:
        print(
            f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–≤–æ–Ω–∫–æ–≤ –∑–∞ –ø–µ—Ä–∏–æ–¥: {start_time_period.strftime('%Y-%m-%d %H:%M:%S')} - {end_time_period.strftime('%Y-%m-%d %H:%M:%S')}")
        print(f"–¶–µ–ª–µ–≤–∞—è –¥–∞—Ç–∞ –ø–∞–ø–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {target_folder_date_str}")

        # --- 0. –°–ö–ê–ß–ò–í–ê–ù–ò–ï –ò –ó–ê–ì–†–£–ó–ö–ê –°–°–´–õ–û–ö –ò–ó GOOGLE SHEETS ---
        gs_file_path = Path(GS_XLSX_FILENAME)
        existing_order_links = set()

        print(f"\n--- –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Å—ã–ª–æ–∫ –∏–∑ Google Sheets ({GS_XLSX_FILENAME}) ---")

        # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª–µ–Ω GS_GID –≤ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        download_success = download_google_sheet_as_xlsx(GS_SHEET_ID, GS_GID, gs_file_path)

        # –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ª–æ–≥–∏–∫–∏, –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Å—ã–ª–∫–∏, –µ—Å–ª–∏ —Ñ–∞–π–ª –µ—Å—Ç—å –ò —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω—ã–º
        if download_success and gs_file_path.exists():
            existing_order_links = load_analyzed_order_links(gs_file_path)
        else:
            print("‚ö†Ô∏è –§–∞–π–ª Google Sheets –Ω–µ –±—ã–ª —Å–∫–∞—á–∞–Ω –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–∞.")
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω
            if gs_file_path.exists():
                os.remove(gs_file_path)
        # ----------------------------------------------------------------------

        # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–≤–æ–Ω–∫–æ–≤ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
        print("\n--- –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–≤–æ–Ω–∫–æ–≤ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ ---")
        calls = get_calls_report(start_time_period.strftime("%Y-%m-%d %H:%M:%S"),
                                 end_time_period.strftime("%Y-%m-%d %H:%M:%S"))

        if not calls:
            print("‚ÑπÔ∏è –ù–µ—Ç –∑–≤–æ–Ω–∫–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–µ—Ä–∏–æ–¥–µ.")
            # 6. –£–î–ê–õ–ï–ù–ò–ï –°–ö–ê–ß–ê–ù–ù–û–ì–û –§–ê–ô–õ–ê GOOGLE SHEETS
            if gs_file_path.exists():
                os.remove(gs_file_path)
            print("\n‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤–æ–Ω–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω.")
            return

        # 2. –§–∏–ª—å—Ç—Ä—É–µ–º –∑–≤–æ–Ω–∫–∏ –ø–æ –Ω–æ–≤—ã–º –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º –∏ –≥–æ—Ç–æ–≤–∏–º —Å–ø–∏—Å–æ–∫ –∫ –∑–∞–≥—Ä—É–∑–∫–µ
        print("\n--- –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–≤–æ–Ω–∫–æ–≤ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º –±–∏–∑–Ω–µ—Å–∞ ---")
        calls_to_download_and_process = []
        for call in calls:
            phone_number = call.get("contact_phone_number") or call.get("raw", {}).get("contact_phone_number")
            call_direction = call.get("direction") or call.get("raw", {}).get("direction")

            # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ–º–µ—Ä–∞ –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–≤–æ–Ω–æ–∫.
            if not phone_number or not call_direction:
                print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–≤–æ–Ω–æ–∫ –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –Ω–æ–º–µ—Ä–∞ –∏–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {call.get('communication_id')}")
                continue

            # --- –§–ò–õ–¨–¢–†–ê–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–∫–∞–∑–∞ (–ü–µ—Ä–≤–æ–µ –∫–∞—Å–∞–Ω–∏–µ, –∏–∑ –ü–†–ï–î–´–î–£–©–ò–• –∑–∞–ø—É—Å–∫–æ–≤) ---
            # –≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤.
            if existing_order_links:
                last_order_link = get_last_order_link_for_check(phone_number)

                if last_order_link:
                    if last_order_link in existing_order_links:
                        print(
                            f"  ‚ùå –ó–≤–æ–Ω–æ–∫ –ù–ï –ø—Ä–æ—à–µ–ª —Ñ–∏–ª—å—Ç—Ä: –ó–∞–∫–∞–∑ {last_order_link} –£–ñ–ï –ï–°–¢–¨ –≤ —Ç–∞–±–ª–∏—Ü–µ (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑). –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                        continue
                    else:
                        print(f"  ‚úÖ –ó–∞–∫–∞–∑ {last_order_link} –ù–ï–¢ –≤ —Ç–∞–±–ª–∏—Ü–µ. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å—É.")
                else:
                    # –ï—Å–ª–∏ –∑–∞–∫–∞–∑–∞ –Ω–µ—Ç, —ç—Ç–æ, –≤–µ—Ä–æ—è—Ç–Ω–æ, –Ω–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å—É.
                    print("  ‚ÑπÔ∏è –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ RetailCRM. –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å—É.")
            # ------------------------------------------------------------------------------

            # –°–£–©–ï–°–¢–í–£–Æ–©–ê–Ø –õ–û–ì–ò–ö–ê –§–ò–õ–¨–¢–†–ê–¶–ò–ò (–ø–æ —Å—Ç–∞—Ç—É—Å—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞)
            if check_if_last_order_is_analyzable(phone_number):
                if call_direction == "in":
                    print(
                        f"‚úÖ –í—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫ —Å –Ω–æ–º–µ—Ä–∞ {phone_number} –ø—Ä–æ—à–µ–ª —Ñ–∏–ª—å—Ç—Ä (—Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω –∫ –∞–Ω–∞–ª–∏–∑—É –∏–ª–∏ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç).")
                    calls_to_download_and_process.append(call)
                elif call_direction == "out":
                    # –ò—Å—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏ —Ç–µ–ø–µ—Ä—å —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ —Å—Ç–∞—Ç—É—Å—É –∑–∞–∫–∞–∑–∞
                    print(
                        f"‚úÖ –ò—Å—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫ –Ω–∞ –Ω–æ–º–µ—Ä {phone_number} –ø—Ä–æ—à–µ–ª —Ñ–∏–ª—å—Ç—Ä (—Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–∫–∞–∑–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω –∫ –∞–Ω–∞–ª–∏–∑—É –∏–ª–∏ –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç).")
                    calls_to_download_and_process.append(call)
            else:
                # –í –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ False –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –≤ –ù–ï–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–º —Å—Ç–∞—Ç—É—Å–µ (–ó–∞–∫—É–ø–∫–∞, –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è, –î–æ—Å—Ç–∞–≤–∫–∞ –∏ —Ç.–ø.)
                print(
                    f"‚ùå –ó–≤–æ–Ω–æ–∫ ({call_direction}) —Å/–Ω–∞ –Ω–æ–º–µ—Ä {phone_number} –ù–ï –ø—Ä–æ—à–µ–ª —Ñ–∏–ª—å—Ç—Ä (–ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑ –ù–ï —Ä–∞–∑—Ä–µ—à–µ–Ω –∫ –∞–Ω–∞–ª–∏–∑—É).")

        print(f"‚û°Ô∏è –ò—Ç–æ–≥–æ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {len(calls_to_download_and_process)} –∑–≤–æ–Ω–∫–æ–≤.")

        if not calls_to_download_and_process:
            print("–ù–µ—Ç –∑–≤–æ–Ω–∫–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏—è–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.")
            # 6. –£–î–ê–õ–ï–ù–ò–ï –°–ö–ê–ß–ê–ù–ù–û–ì–û –§–ê–ô–õ–ê GOOGLE SHEETS
            if gs_file_path.exists():
                os.remove(gs_file_path)
            print("\n‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤–æ–Ω–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω.")
            return

        # 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∏
        audio_dir = Path("audio") / f"–∑–≤–æ–Ω–∫–∏_{target_folder_date_str}"
        audio_dir.mkdir(parents=True, exist_ok=True)
        print("\n--- –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–≤–æ–Ω–∫–æ–≤ ---")
        # –ó–¥–µ—Å—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é download_calls, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–π —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∑–≤–æ–Ω–∫–∏.
        downloaded_call_info_paths = download_calls(calls_to_download_and_process, audio_dir)
        print(f"–°—Ç–∞—Ç—É—Å –ø–∞–ø–∫–∏ –∞—É–¥–∏–æ: {audio_dir.exists()} (—Å–æ–¥–µ—Ä–∂–∏—Ç {len(list(audio_dir.glob('*.mp3')))} mp3 —Ñ–∞–π–ª–æ–≤)")

        # 4. –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –∏ –∞–Ω–∞–ª–∏–∑
        if downloaded_call_info_paths:
            print("\n--- –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –∑–≤–æ–Ω–∫–æ–≤ ---")
            transcribe_all(target_folder_date_str, assign_roles=True)
            transcripts_dir = Path("transcripts") / f"—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è_{target_folder_date_str}"
            print(
                f"–°—Ç–∞—Ç—É—Å –ø–∞–ø–∫–∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤: {transcripts_dir.exists()} (—Å–æ–¥–µ—Ä–∂–∏—Ç {len(list(transcripts_dir.glob('*.txt')))} txt —Ñ–∞–π–ª–æ–≤)")

            print("\n--- –ê–Ω–∞–ª–∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–æ–≤ ---")
            analyze_transcripts(target_folder_date_str)
            analyses_dir = Path("analyses") / f"—Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è_{target_folder_date_str}"
            print(
                f"–°—Ç–∞—Ç—É—Å –ø–∞–ø–∫–∏ –∞–Ω–∞–ª–∏–∑–æ–≤: {analyses_dir.exists()} (—Å–æ–¥–µ—Ä–∂–∏—Ç {len(list(analyses_dir.glob('*_analysis.json')))} json —Ñ–∞–π–ª–æ–≤)")

            # 5. –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∞–ª–∏–∑–æ–≤
            # –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞–±–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—Å—ã–ª–æ–∫
            send_all_analyses_to_integrations(analyses_dir, target_folder_date_str, existing_order_links)

        # 6. –£–î–ê–õ–ï–ù–ò–ï –°–ö–ê–ß–ê–ù–ù–û–ì–û –§–ê–ô–õ–ê GOOGLE SHEETS
        if gs_file_path.exists():
            try:
                os.remove(gs_file_path)
                print(f"\nüßπ –§–∞–π–ª {GS_XLSX_FILENAME} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {GS_XLSX_FILENAME}: {e}")

    print("\n‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤–æ–Ω–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω.")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–∞–π–ø–ª–∞–π–Ω–∞...")
    run_processing_pipeline()
    print("\n‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
